// Code generated by protoc-gen-go. DO NOT EDIT.
// source: profile_service.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CreateProfileRequest creates a profile.
type CreateProfileRequest struct {
	// The name of the profile to create.
	// Specified in the format 'users/*/profile'.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A profile resource.
	Profile              *Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProfileRequest) Reset()         { *m = CreateProfileRequest{} }
func (m *CreateProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProfileRequest) ProtoMessage()    {}
func (*CreateProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4161e940054fdafb, []int{0}
}

func (m *CreateProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProfileRequest.Unmarshal(m, b)
}
func (m *CreateProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProfileRequest.Marshal(b, m, deterministic)
}
func (m *CreateProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProfileRequest.Merge(m, src)
}
func (m *CreateProfileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProfileRequest.Size(m)
}
func (m *CreateProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProfileRequest proto.InternalMessageInfo

func (m *CreateProfileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProfileRequest) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

// GetProfileRequest gets the profile of a user.
type GetProfileRequest struct {
	// The name of the profile to retrieve.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProfileRequest) Reset()         { *m = GetProfileRequest{} }
func (m *GetProfileRequest) String() string { return proto.CompactTextString(m) }
func (*GetProfileRequest) ProtoMessage()    {}
func (*GetProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4161e940054fdafb, []int{1}
}

func (m *GetProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProfileRequest.Unmarshal(m, b)
}
func (m *GetProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProfileRequest.Marshal(b, m, deterministic)
}
func (m *GetProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProfileRequest.Merge(m, src)
}
func (m *GetProfileRequest) XXX_Size() int {
	return xxx_messageInfo_GetProfileRequest.Size(m)
}
func (m *GetProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProfileRequest proto.InternalMessageInfo

func (m *GetProfileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// A user profile.
type Profile struct {
	// The name of this profile.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The user's display name.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The user's email address.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// The URL of the user's profile picture.
	PhotoUrl             string   `protobuf:"bytes,4,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_4161e940054fdafb, []int{2}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Profile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Profile) GetPhotoUrl() string {
	if m != nil {
		return m.PhotoUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateProfileRequest)(nil), "superego.people.v1alpha1.CreateProfileRequest")
	proto.RegisterType((*GetProfileRequest)(nil), "superego.people.v1alpha1.GetProfileRequest")
	proto.RegisterType((*Profile)(nil), "superego.people.v1alpha1.Profile")
}

func init() { proto.RegisterFile("profile_service.proto", fileDescriptor_4161e940054fdafb) }

var fileDescriptor_4161e940054fdafb = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4a, 0x23, 0x41,
	0x10, 0x86, 0x99, 0xd9, 0xec, 0x66, 0xd3, 0xd9, 0x5d, 0xd8, 0x26, 0x0b, 0x43, 0x76, 0x0f, 0xc9,
	0x5c, 0x36, 0x6c, 0xc8, 0xf4, 0x4e, 0xcc, 0x49, 0x51, 0x44, 0x0f, 0x9e, 0x14, 0x09, 0x78, 0xf1,
	0x12, 0x3a, 0x49, 0x39, 0x69, 0xec, 0xe9, 0x6e, 0xbb, 0x7b, 0x02, 0x22, 0x5e, 0x3c, 0xf8, 0x02,
	0xe2, 0x83, 0xf8, 0x2c, 0xbe, 0x82, 0x0f, 0x22, 0xe9, 0x99, 0x51, 0xc4, 0x84, 0x78, 0x9b, 0xa9,
	0xbf, 0xaa, 0xfe, 0xbf, 0x3e, 0x1a, 0xfd, 0x52, 0x5a, 0x9e, 0x31, 0x0e, 0x23, 0x03, 0x7a, 0xce,
	0x26, 0x10, 0x29, 0x2d, 0xad, 0xc4, 0x81, 0xc9, 0x14, 0x68, 0x48, 0x64, 0xa4, 0x40, 0x2a, 0x0e,
	0xd1, 0x3c, 0xa6, 0x5c, 0xcd, 0x68, 0xdc, 0xfc, 0x93, 0x48, 0x99, 0x70, 0x20, 0x54, 0x31, 0x42,
	0x85, 0x90, 0x96, 0x5a, 0x26, 0x85, 0xc9, 0xe7, 0xc2, 0x04, 0x35, 0xf6, 0x35, 0x50, 0x0b, 0xc7,
	0xf9, 0xda, 0x21, 0x5c, 0x64, 0x60, 0x2c, 0xc6, 0xa8, 0x22, 0x68, 0x0a, 0x81, 0xd7, 0xf2, 0x3a,
	0xb5, 0xa1, 0xfb, 0xc6, 0x5b, 0xa8, 0x5a, 0x98, 0x07, 0x7e, 0xcb, 0xeb, 0xd4, 0xfb, 0xed, 0x68,
	0x95, 0x6b, 0x54, 0xae, 0x2b, 0x27, 0xc2, 0xbf, 0xe8, 0xe7, 0x01, 0xd8, 0xf5, 0x2e, 0xa1, 0x41,
	0xd5, 0xa2, 0x6b, 0x69, 0x88, 0x36, 0xfa, 0x36, 0x65, 0x46, 0x71, 0x7a, 0x39, 0x72, 0x9a, 0xef,
	0xb4, 0x7a, 0x51, 0x3b, 0x5a, 0xb4, 0x34, 0xd0, 0x67, 0x48, 0x29, 0xe3, 0xc1, 0x27, 0xa7, 0xe5,
	0x3f, 0xf8, 0x37, 0xaa, 0xa9, 0x99, 0xb4, 0x72, 0x94, 0x69, 0x1e, 0x54, 0x9c, 0xf2, 0xd5, 0x15,
	0x4e, 0x34, 0xef, 0x3f, 0xf8, 0xe8, 0x47, 0xe1, 0x7a, 0x48, 0x05, 0x4d, 0x40, 0xe3, 0x7b, 0x0f,
	0x7d, 0x7f, 0x83, 0x06, 0x47, 0xab, 0xcf, 0x5d, 0xc6, 0xb0, 0xb9, 0x1e, 0x4f, 0x18, 0xdf, 0x3c,
	0x3e, 0xdd, 0xf9, 0xdd, 0xb0, 0x45, 0x4a, 0x89, 0x5c, 0x2d, 0xce, 0xda, 0xce, 0x0c, 0x68, 0x43,
	0xfe, 0x91, 0x02, 0xdf, 0xf5, 0x66, 0x09, 0x12, 0xdf, 0x7a, 0x08, 0xbd, 0x92, 0xc4, 0xdd, 0xd5,
	0x26, 0xef, 0x78, 0x7f, 0x24, 0x51, 0xc7, 0x25, 0x0a, 0xf1, 0xda, 0x44, 0x7b, 0xbb, 0xa7, 0x3b,
	0x09, 0xb3, 0xb3, 0x6c, 0x1c, 0x4d, 0x64, 0x4a, 0xc6, 0x20, 0xce, 0x59, 0xfa, 0x7f, 0x10, 0x0f,
	0x48, 0xe9, 0xd1, 0x9b, 0x70, 0x99, 0x4d, 0x7b, 0x20, 0xa6, 0x4a, 0x32, 0x61, 0x0d, 0xc9, 0x3d,
	0x5f, 0x16, 0x8f, 0xbf, 0xb8, 0x37, 0xb8, 0xf1, 0x1c, 0x00, 0x00, 0xff, 0xff, 0x28, 0x11, 0xd0,
	0x3a, 0xd4, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProfileManagerClient is the client API for ProfileManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProfileManagerClient interface {
	// Creates a profile, consisting of the user profile information of Firebase.
	CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	// Gets the profile of a specific user.
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
}

type profileManagerClient struct {
	cc *grpc.ClientConn
}

func NewProfileManagerClient(cc *grpc.ClientConn) ProfileManagerClient {
	return &profileManagerClient{cc}
}

func (c *profileManagerClient) CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/superego.people.v1alpha1.ProfileManager/CreateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileManagerClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/superego.people.v1alpha1.ProfileManager/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfileManagerServer is the server API for ProfileManager service.
type ProfileManagerServer interface {
	// Creates a profile, consisting of the user profile information of Firebase.
	CreateProfile(context.Context, *CreateProfileRequest) (*Profile, error)
	// Gets the profile of a specific user.
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
}

func RegisterProfileManagerServer(s *grpc.Server, srv ProfileManagerServer) {
	s.RegisterService(&_ProfileManager_serviceDesc, srv)
}

func _ProfileManager_CreateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileManagerServer).CreateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/superego.people.v1alpha1.ProfileManager/CreateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileManagerServer).CreateProfile(ctx, req.(*CreateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileManager_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileManagerServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/superego.people.v1alpha1.ProfileManager/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileManagerServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProfileManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "superego.people.v1alpha1.ProfileManager",
	HandlerType: (*ProfileManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProfile",
			Handler:    _ProfileManager_CreateProfile_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _ProfileManager_GetProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "profile_service.proto",
}
